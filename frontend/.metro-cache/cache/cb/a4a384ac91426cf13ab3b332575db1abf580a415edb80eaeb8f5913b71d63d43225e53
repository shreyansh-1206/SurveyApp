{"dependencies":[{"name":"expo/virtual/env","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"dgHc21cgR+buKc7O3/dChhD5JJk=","exportNames":["*"],"imports":1}},{"name":"crypto-js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":33,"index":33}}],"key":"TLjsXnAWOlf/gpObabse3HZX8VY=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"encrypt\", {\n    enumerable: true,\n    get: function () {\n      return encrypt;\n    }\n  });\n  Object.defineProperty(exports, \"decrypt\", {\n    enumerable: true,\n    get: function () {\n      return decrypt;\n    }\n  });\n  var _expoVirtualEnv = require(_dependencyMap[0], \"expo/virtual/env\");\n  var _cryptoJs = require(_dependencyMap[1], \"crypto-js\");\n  var CryptoJS = _interopDefault(_cryptoJs);\n  // Get encryption key from environment\n  const getEncryptionKey = () => {\n    return _expoVirtualEnv.env.EXPO_PUBLIC_ENCRYPTION_KEY || 'default-key-change-in-production';\n  };\n\n  /**\n   * Encrypt sensitive data (e.g., Aadhar number)\n   * @param {string} data - Data to encrypt\n   * @returns {string} Encrypted data\n   */\n  const encrypt = data => {\n    try {\n      if (!data) return '';\n      const key = getEncryptionKey();\n      const encrypted = CryptoJS.default.AES.encrypt(data, key).toString();\n      return encrypted;\n    } catch (e) {\n      console.error('Encryption error:', e);\n      throw new Error('Failed to encrypt data');\n    }\n  };\n\n  /**\n   * Decrypt sensitive data\n   * @param {string} encryptedData - Encrypted data\n   * @returns {string} Decrypted data\n   */\n  const decrypt = encryptedData => {\n    try {\n      if (!encryptedData) return '';\n      const key = getEncryptionKey();\n      const bytes = CryptoJS.default.AES.decrypt(encryptedData, key);\n      const decrypted = bytes.toString(CryptoJS.default.enc.Utf8);\n      return decrypted;\n    } catch (e) {\n      console.error('Decryption error:', e);\n      throw new Error('Failed to decrypt data');\n    }\n  };\n});","lineCount":66,"map":[[12,2,13,0,"Object"],[12,8,13,0],[12,9,13,0,"defineProperty"],[12,23,13,0],[12,24,13,0,"exports"],[12,31,13,0],[13,4,13,0,"enumerable"],[13,14,13,0],[14,4,13,0,"get"],[14,7,13,0],[14,18,13,0,"get"],[14,19,13,0],[15,6,13,0],[15,13,13,0,"encrypt"],[15,20,13,0],[16,4,13,0],[17,2,13,0],[18,2,30,0,"Object"],[18,8,30,0],[18,9,30,0,"defineProperty"],[18,23,30,0],[18,24,30,0,"exports"],[18,31,30,0],[19,4,30,0,"enumerable"],[19,14,30,0],[20,4,30,0,"get"],[20,7,30,0],[20,18,30,0,"get"],[20,19,30,0],[21,6,30,0],[21,13,30,0,"decrypt"],[21,20,30,0],[22,4,30,0],[23,2,30,0],[24,2,41,2],[24,6,41,2,"_expoVirtualEnv"],[24,21,41,2],[24,24,41,2,"require"],[24,31,41,2],[24,32,41,2,"_dependencyMap"],[24,46,41,2],[25,2,1,0],[25,6,1,0,"_cryptoJs"],[25,15,1,0],[25,18,1,0,"require"],[25,25,1,0],[25,26,1,0,"_dependencyMap"],[25,40,1,0],[26,2,1,0],[26,6,1,0,"CryptoJS"],[26,14,1,0],[26,17,1,0,"_interopDefault"],[26,32,1,0],[26,33,1,0,"_cryptoJs"],[26,42,1,0],[27,2,3,0],[28,2,4,0],[28,8,4,6,"getEncryptionKey"],[28,24,4,22],[28,27,4,25,"getEncryptionKey"],[28,28,4,25],[28,33,4,31],[29,4,5,2],[29,11,5,9,"_expoVirtualEnv"],[29,26,5,9],[29,27,5,9,"env"],[29,30,5,9],[29,31,5,9,"EXPO_PUBLIC_ENCRYPTION_KEY"],[29,57,5,9],[29,61,5,51],[29,95,5,85],[30,2,6,0],[30,3,6,1],[32,2,8,0],[33,0,9,0],[34,0,10,0],[35,0,11,0],[36,0,12,0],[37,2,13,7],[37,8,13,13,"encrypt"],[37,15,13,20],[37,18,13,24,"data"],[37,22,13,28],[37,26,13,33],[38,4,14,2],[38,8,14,6],[39,6,15,4],[39,10,15,8],[39,11,15,9,"data"],[39,15,15,13],[39,17,15,15],[39,24,15,22],[39,26,15,24],[40,6,16,4],[40,12,16,10,"key"],[40,15,16,13],[40,18,16,16,"getEncryptionKey"],[40,34,16,32],[40,35,16,33],[40,36,16,34],[41,6,17,4],[41,12,17,10,"encrypted"],[41,21,17,19],[41,24,17,22,"CryptoJS"],[41,32,17,30],[41,33,17,30,"default"],[41,40,17,30],[41,41,17,31,"AES"],[41,44,17,34],[41,45,17,35,"encrypt"],[41,52,17,42],[41,53,17,43,"data"],[41,57,17,47],[41,59,17,49,"key"],[41,62,17,52],[41,63,17,53],[41,64,17,54,"toString"],[41,72,17,62],[41,73,17,63],[41,74,17,64],[42,6,18,4],[42,13,18,11,"encrypted"],[42,22,18,20],[43,4,19,2],[43,5,19,3],[43,6,19,4],[43,13,19,11,"e"],[43,14,19,12],[43,16,19,14],[44,6,20,4,"console"],[44,13,20,11],[44,14,20,12,"error"],[44,19,20,17],[44,20,20,18],[44,39,20,37],[44,41,20,39,"e"],[44,42,20,40],[44,43,20,41],[45,6,21,4],[45,12,21,10],[45,16,21,14,"Error"],[45,21,21,19],[45,22,21,20],[45,46,21,44],[45,47,21,45],[46,4,22,2],[47,2,23,0],[47,3,23,1],[49,2,25,0],[50,0,26,0],[51,0,27,0],[52,0,28,0],[53,0,29,0],[54,2,30,7],[54,8,30,13,"decrypt"],[54,15,30,20],[54,18,30,24,"encryptedData"],[54,31,30,37],[54,35,30,42],[55,4,31,2],[55,8,31,6],[56,6,32,4],[56,10,32,8],[56,11,32,9,"encryptedData"],[56,24,32,22],[56,26,32,24],[56,33,32,31],[56,35,32,33],[57,6,33,4],[57,12,33,10,"key"],[57,15,33,13],[57,18,33,16,"getEncryptionKey"],[57,34,33,32],[57,35,33,33],[57,36,33,34],[58,6,34,4],[58,12,34,10,"bytes"],[58,17,34,15],[58,20,34,18,"CryptoJS"],[58,28,34,26],[58,29,34,26,"default"],[58,36,34,26],[58,37,34,27,"AES"],[58,40,34,30],[58,41,34,31,"decrypt"],[58,48,34,38],[58,49,34,39,"encryptedData"],[58,62,34,52],[58,64,34,54,"key"],[58,67,34,57],[58,68,34,58],[59,6,35,4],[59,12,35,10,"decrypted"],[59,21,35,19],[59,24,35,22,"bytes"],[59,29,35,27],[59,30,35,28,"toString"],[59,38,35,36],[59,39,35,37,"CryptoJS"],[59,47,35,45],[59,48,35,45,"default"],[59,55,35,45],[59,56,35,46,"enc"],[59,59,35,49],[59,60,35,50,"Utf8"],[59,64,35,54],[59,65,35,55],[60,6,36,4],[60,13,36,11,"decrypted"],[60,22,36,20],[61,4,37,2],[61,5,37,3],[61,6,37,4],[61,13,37,11,"e"],[61,14,37,12],[61,16,37,14],[62,6,38,4,"console"],[62,13,38,11],[62,14,38,12,"error"],[62,19,38,17],[62,20,38,18],[62,39,38,37],[62,41,38,39,"e"],[62,42,38,40],[62,43,38,41],[63,6,39,4],[63,12,39,10],[63,16,39,14,"Error"],[63,21,39,19],[63,22,39,20],[63,46,39,44],[63,47,39,45],[64,4,40,2],[65,2,41,0],[65,3,41,1],[66,0,41,2],[66,3]],"functionMap":{"names":["<global>","getEncryptionKey","encrypt","decrypt"],"mappings":"AAA;yBCG;CDE;uBEO;CFU;uBGO;CHW"},"hasCjsExports":false},"type":"js/module"}]}